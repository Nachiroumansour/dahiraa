const sqlite3 = require('sqlite3').verbose();
const bcrypt = require('bcryptjs');
const { v4: uuidv4 } = require('crypto');

// Chemin vers la base de donn√©es
const dbPath = process.env.DATABASE_URL || 'prisma/dev.db';

async function setupDatabase() {
  return new Promise((resolve, reject) => {
    const db = new sqlite3.Database(dbPath, (err) => {
      if (err) {
        console.error('‚ùå Erreur de connexion √† la base de donn√©es:', err.message);
        reject(err);
        return;
      }
      console.log('‚úÖ Connexion √† la base de donn√©es SQLite √©tablie');
    });

    // Lire le fichier SQL
    const fs = require('fs');
    const sql = fs.readFileSync('./create-tables.sql', 'utf8');

    // Ex√©cuter le script SQL
    db.exec(sql, async (err) => {
      if (err) {
        console.error('‚ùå Erreur lors de la cr√©ation des tables:', err.message);
        reject(err);
        return;
      }
      console.log('‚úÖ Tables cr√©√©es avec succ√®s');

      // Cr√©er un utilisateur admin
      try {
        const hashedPassword = await bcrypt.hash('admin123', 10);
        const userId = uuidv4();
        
        db.run(`
          INSERT OR IGNORE INTO "User" (id, email, password, role, createdAt, updatedAt)
          VALUES (?, ?, ?, ?, datetime('now'), datetime('now'))
        `, [userId, 'admin@dahiraa.com', hashedPassword, 'ADMIN'], function(err) {
          if (err) {
            console.error('‚ùå Erreur lors de la cr√©ation de l\'utilisateur admin:', err.message);
            reject(err);
            return;
          }
          
          if (this.changes > 0) {
            console.log('‚úÖ Utilisateur admin cr√©√© avec succ√®s');
          } else {
            console.log('‚ÑπÔ∏è Utilisateur admin existe d√©j√†');
          }

          // Cr√©er un utilisateur de test
          const testUserId = uuidv4();
          db.run(`
            INSERT OR IGNORE INTO "User" (id, email, password, role, createdAt, updatedAt)
            VALUES (?, ?, ?, ?, datetime('now'), datetime('now'))
          `, [testUserId, 'test@dahiraa.com', hashedPassword, 'ADMIN'], function(err) {
            if (err) {
              console.error('‚ùå Erreur lors de la cr√©ation de l\'utilisateur test:', err.message);
              reject(err);
              return;
            }
            
            if (this.changes > 0) {
              console.log('‚úÖ Utilisateur test cr√©√© avec succ√®s');
            } else {
              console.log('‚ÑπÔ∏è Utilisateur test existe d√©j√†');
            }

            console.log('\nüéâ Base de donn√©es configur√©e avec succ√®s !');
            console.log('\nüìã Identifiants de connexion :');
            console.log('   Admin: admin@dahiraa.com / admin123');
            console.log('   Test: test@dahiraa.com / admin123');
            
            db.close((err) => {
              if (err) {
                console.error('‚ùå Erreur lors de la fermeture de la base de donn√©es:', err.message);
              } else {
                console.log('‚úÖ Connexion √† la base de donn√©es ferm√©e');
              }
              resolve();
            });
          });
        });
      } catch (error) {
        console.error('‚ùå Erreur lors du hashage du mot de passe:', error);
        reject(error);
      }
    });
  });
}

setupDatabase().catch(console.error); 