// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Member {
  id                    String        @id @default(cuid())
  nom                   String
  prenom                String
  dateNaissance         DateTime?
  lieuNaissance         String?
  adresse               String?
  adresseComplement     String?
  telephone             String?
  email                 String?
  profession            String?
  genre                 String?
  situationMatrimoniale String?
  decouverteDahira      String?
  dateAdhesion          DateTime?
  numeroAdhesion        String?
  statut                Statut        @default(ACTIF)
  photo                 String?
  commission            String?       // Secrétaire General et Pr Communication
  niveauArabe           NiveauArabe?  // Niveau débutant, moyen, bon, excellent
  categorie             Categorie?    // Catégorie A ou B
  antecedentsMedicaux   String?
  allergies             String?
  traitements           String?
  contactUrgenceTel     String?
  typeAutorite          String?
  contactUrgenceNom     String?
  contactUrgencePrenom  String?
  contactUrgenceTelephone String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt

  cotisations           Cotisation[]

  @@map("members")
}

model Cotisation {
  id           String   @id @default(cuid())
  memberId     String
  montant      Float
  datePaiement DateTime
  type         Type     @default(MENSUELLE)
  mois         String?
  annee        Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  member       Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@map("cotisations")
}

model Evenement {
  id          String        @id @default(cuid())
  titre       String
  description String?
  dateDebut   DateTime
  dateFin     DateTime?
  lieu        String?
  type        TypeEvenement @default(REUNION)
  statut      Statut        @default(PLANIFIE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("evenements")
}

model Expense {
  id          String   @id @default(cuid())
  titre       String
  montant     Float
  date        DateTime
  categorie   String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("expenses")
}

enum Role {
  ADMIN
  GESTIONNAIRE
}

enum Statut {
  ACTIF
  INACTIF
  PLANIFIE
  EN_COURS
  TERMINE
  ANNULE
}

enum Type {
  MENSUELLE
  ANNUELLE
  SPECIALE
}

enum TypeEvenement {
  REUNION
  FORMATION
  CELEBRATION
  AUTRE
}

enum NiveauArabe {
  DEBUTANT
  MOYEN
  BON
  EXCELLENT
}

enum Categorie {
  A
  B
}

